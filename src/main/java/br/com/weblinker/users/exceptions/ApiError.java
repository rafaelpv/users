package br.com.weblinker.users.exceptions;

import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;

//TODO here add logged user ID

@Schema(description = "Representation of an API error response")
public class ApiError {

    @Schema(
        description = "Error response example for Bad Request (400)",
        example = "{\"status\": 400, \"error\": \"Bad Request\", \"message\": \"firstName: First name is required;\", \"path\": \"/resources\", \"method\": \"POST\", \"timestamp\": \"2024-12-21T15:45:00\"}"
    )
    public static final String BAD_REQUEST = "{\"status\": 400, \"error\": \"Bad Request\", \"message\": \"firstName: First name is required;\", \"path\": \"/resources\", \"method\": \"POST\", \"timestamp\": \"2024-12-21T15:45:00\"}";

    @Schema(
            description = "Error response example for Forbidden (403)",
            example = "{\"status\": 403, \"error\": \"Forbidden\", \"message\": \"User does not have permission to access the resource\", \"path\": \"/protected-resource\", \"method\": \"GET\", \"timestamp\": \"2024-12-21T15:50:00\"}"
    )
    public static final String FORBIDDEN = "{\"status\": 403, \"error\": \"Forbidden\", \"message\": \"User does not have permission to access the resource\", \"path\": \"/protected-resource\", \"method\": \"GET\", \"timestamp\": \"2024-12-21T15:50:00\"}";

    @Schema(
        description = "Error response example for Resource Not Found",
        example = "{\"status\": 404, \"error\": \"Not Found\", \"message\": \"Resource not found\", \"path\": \"resources/{resourceId}\", \"method\": \"GET\", \"timestamp\": \"2024-12-21T15:30:00\"}"
    )
    public static final String USER_NOT_FOUND = "{\"status\": 404, \"error\": \"Not Found\", \"message\": \"Resource not found\", \"path\": \"resources/{resourceId}\", \"method\": \"GET\", \"timestamp\": \"2024-12-21T15:30:00\"}";

    @Schema(description = "HTTP status code", example = "404")
    private int status;

    @Schema(description = "Error type generated by the API", example = "Not Found")
    private String error;

    @Schema(description = "Detailed error message", example = "User not found")
    private String message;

    @Schema(description = "Path of the request that caused the error", example = "/api/v1/users/{id}")
    private String path;

    @Schema(description = "HTTP method used in the request", example = "GET")
    private String method;

    @Schema(description = "Timestamp when the error occurred", example = "2024-12-21T15:30:00")
    private LocalDateTime timestamp;

    public ApiError(int status, String error, String message, String path, String method) {
        this.status = status;
        this.error = error;
        this.message = message;
        this.path = path;
        this.method = method;
        this.timestamp = LocalDateTime.now();
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public String getError() {
        return error;
    }

    public void setError(String error) {
        this.error = error;
    }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public String getMethod() {
        return method;
    }

    public void setMethod(String method) {
        this.method = method;
    }

    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }
}
